<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NewsPortalWebApi</name>
    </assembly>
    <members>
        <member name="T:NewsPortalWebApi.Business_Logic.DTO.AuthorDTO">
            <summary>
            DTO с информацией об авторе
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.AuthorDTO.Id">
            <summary>
            id автора
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.AuthorDTO.Name">
            <summary>
            Имя автора
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto">
            <summary>
            DTO с полной информацией о новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.Id">
            <summary>
            Идентификатор новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.Title">
            <summary>
            Название статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.Description">
            <summary>
            Свойство краткого описания статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.MainText">
            <summary>
            Свойство основного текста новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.NewsImage">
            <summary>
            Свойство изображения новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.CreationDateTime">
            <summary>
            Дата создания статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.AuthorName">
            <summary>
            Имя автора
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.Author">
            <summary>
            Автор статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto.AuthorId">
            <summary>
            Идентификатор автора
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Business_Logic.DTO.NewsShortDto">
            <summary>
            DTO с укороченной информацией о новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsShortDto.Id">
            <summary>
            Идентификатор новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsShortDto.Title">
            <summary>
            Свойство названия статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsShortDto.Description">
            <summary>
            Свойство краткого описания статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsShortDto.NewsImage">
            <summary>
            Свойство изображения новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsShortDto.CreationDateTime">
            <summary>
            Дата создания статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsShortDto.Author">
            <summary>
            Нав. свойство Автор
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Business_Logic.DTO.NewsShortDto.AuthorId">
            <summary>
            Идентификатор автора
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Business_Logic.Inerfaces.INewsService`3">
            <summary>
            Интерфейс служб для работы с новостями
            </summary>
            <typeparam name="TShort"></typeparam>
            <typeparam name="TDetail"></typeparam>
            <typeparam name="TAuthor"></typeparam>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Inerfaces.INewsService`3.GetNews(System.Guid)">
            <summary>
            Получение новости по id
            </summary>
            <param name="id">
            id новости
            </param>
            <returns>
            Возвращает новость
            </returns>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Inerfaces.INewsService`3.GetAllNews">
            <summary>
            Получение всех новостей
            </summary>
            <returns>
            Возвращение всех новостей
            </returns>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Inerfaces.INewsService`3.GetGroupNews(System.Int32)">
            <summary>
            Получение группы новостей
            </summary>
            <returns>Возвращает группу из нескольких новостей</returns>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Inerfaces.INewsService`3.GetAuthorName(System.Guid)">
            <summary>
            Получение имени автора по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NewsPortalWebApi.Business_Logic.Services.NewsServices">
            <summary>
            Класс служб для работы с новостями
            </summary>
        </member>
        <member name="F:NewsPortalWebApi.Business_Logic.Services.NewsServices._db">
            <summary>
            Объект UnitOfWork для получения доступа к репозиториям
            </summary>
        </member>
        <member name="F:NewsPortalWebApi.Business_Logic.Services.NewsServices._mapper">
            <summary>
            Объект библиотеки Mapper, содержащий в себе маппинг DTO's
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Services.NewsServices.#ctor(NewsPortalWebApi.Data_Access.Interfaces.IUnitOfWork,AutoMapper.IMapper)">
            <summary>
            Создание служб по классу работы с репозиториями
            </summary>
            <param name="entity"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Services.NewsServices.GetNews(System.Guid)">
            <summary>
            Метод получения новости по Id
            </summary>
            <param name="id">
            Id новости
            </param>
            <remarks>
            Происходит проецирование модели News на NewsDetailDTO
            </remarks>
            <returns>
            Возвращает новость по ее id
            </returns>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Services.NewsServices.GetAllNews">
            <summary>
            Метод получения всех новостей
            </summary>
            <remarks>
            проецирование модели News на NewsShortDTO
            </remarks>
            <returns>
            Возвращает все новости в коротком формате
            </returns>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Services.NewsServices.GetGroupNews(System.Int32)">
            <summary>
            Метод получения группы новостей
            </summary>
            <returns>Возвращает 4 новости</returns>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.Services.NewsServices.GetAuthorName(System.Guid)">
            <summary>
            Метод для получения Автора
            </summary>
            <param name="id">Id Автора</param>
            <returns>Возвращает объект Author</returns>
        </member>
        <member name="T:NewsPortalWebApi.Business_Logic.MappingProfile">
            <summary>
            Класс в котором содержится мапинг DTO
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Business_Logic.MappingProfile.#ctor">
            <summary>
            Конструктор профиля Mapper
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.EFCore.NewsPortalWebApiContext">
            <summary>
            Класс получения контекста из базы данных
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.EFCore.NewsPortalWebApiContext.News">
            <summary>
            Создание набора данных о новостях
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.EFCore.NewsPortalWebApiContext.Authors">
            <summary>
            Создание набора данных об авторах
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.NewsPortalWebApiContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{NewsPortalWebApi.Data_Access.EFCore.NewsPortalWebApiContext})">
            <summary>
            Получение контекста из базы данных
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.EFCore.Repositories.AuthorsRepository">
            <summary>
            Класс репозитория авторов
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.AuthorsRepository.#ctor(NewsPortalWebApi.Data_Access.EFCore.NewsPortalWebApiContext)">
            <summary>
            Констурктор репозитория
            </summary>
            <param name="context">
            Аргументом является контекст из базы данных
            </param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.AuthorsRepository.GetAll">
            <summary>
            Метод для получения всех авторов
            </summary>
            <returns>
            Возвращает всех авторов из базы данных
            </returns>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.AuthorsRepository.Get(System.Guid)">
            <summary>
            Метод для получения автора по id
            </summary>
            <param name="id">
            id нужного автора
            </param>
            <returns>
            Возвращает нужного автора</returns>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.AuthorsRepository.Add(NewsPortalWebApi.Data_Access.Models.Author)">
            <summary>
            Добавляет автора в базу данных
            </summary>
            <param name="entity">
            </param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.AuthorsRepository.Delete(System.Guid)">
            <summary>
            Удаляет автора по id
            </summary>
            <param name="id">
            id автора
            </param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.AuthorsRepository.Update(NewsPortalWebApi.Data_Access.Models.Author)">
            <summary>
            Изменяет автора
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.EFCore.Repositories.EFUnitOfWork">
            <summary>
            Класс для работы с репозиториями
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.EFUnitOfWork.#ctor(NewsPortalWebApi.Data_Access.EFCore.NewsPortalWebApiContext,NewsPortalWebApi.Data_Access.Interfaces.IRepository{NewsPortalWebApi.Data_Access.Models.News},NewsPortalWebApi.Data_Access.Interfaces.IRepository{NewsPortalWebApi.Data_Access.Models.Author})">
            <summary>
            Конструктор класса для работы репозитория
            </summary>
            <param name="context">
            Контекст из базы данных
            </param>
            <param name="newsRep">Новостной репозиторий</param>
            <param name="authorsRep">Репозиторий с авторами</param>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.EFCore.Repositories.EFUnitOfWork.NewsRep">
            <summary>
            Получение репозитория новостей
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.EFCore.Repositories.EFUnitOfWork.AuthorsRep">
            <summary>
            Получение репозитория новостей
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.EFUnitOfWork.Save">
            <summary>
            Сохранение изменений
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.EFUnitOfWork.Dispose(System.Boolean)">
            <summary>
            Освобождение выделенных ресурсов для этого контекста
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.EFUnitOfWork.Dispose">
            <summary>
            Пропуск финализации
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.EFCore.Repositories.NewsRepository">
            <summary>
            Класс репозитория для новостей 
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.NewsRepository.#ctor(NewsPortalWebApi.Data_Access.EFCore.NewsPortalWebApiContext)">
            <summary>
            Констурктор репозитория
            </summary>
            <param name="context">
            Аргументом является контекст из базы данных
            </param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.NewsRepository.GetAll">
            <summary>
            Метод для получения всех новостей
            </summary>
            <returns>
            Возвращает все новости из базы данных
            </returns>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.NewsRepository.Get(System.Guid)">
            <summary>
            Метод для получения новости по Id
            </summary>
            <param name="id">
            Id нужной новости
            </param>
            <returns>
            Возвращает нужную новость</returns>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.NewsRepository.Add(NewsPortalWebApi.Data_Access.Models.News)">
            <summary>
            Добавляет новость в базу данных
            </summary>
            <param name="entity">
            </param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.NewsRepository.Delete(System.Guid)">
            <summary>
            Удаляет новость по id
            </summary>
            <param name="id">
            Id новости
            </param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.EFCore.Repositories.NewsRepository.Update(NewsPortalWebApi.Data_Access.Models.News)">
            <summary>
            Изменяет новость
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.Interfaces.IEntity">
            <summary>
            сущность
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Interfaces.IEntity.Id">
            <summary>
            идентификатор сущности
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.Interfaces.IRepository`1">
            <summary>
            Интерфейс для репозитория
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.Interfaces.IRepository`1.GetAll">
            <summary>
            Метод для получения информации о всех сущностях данного типа
            </summary>
            <returns></returns>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.Interfaces.IRepository`1.Get(System.Guid)">
            <summary>
            Метод получения информации о сущности по ее Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.Interfaces.IRepository`1.Add(`0)">
            <summary>
            Метод добавления сущности в базу данных
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.Interfaces.IRepository`1.Update(`0)">
            <summary>
            Метод изменения сущности
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.Interfaces.IRepository`1.Delete(System.Guid)">
            <summary>
            Метод удаления сущности
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.Interfaces.IUnitOfWork">
            <summary>
            Интерфейс для работы с репозиториями
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Interfaces.IUnitOfWork.NewsRep">
            <summary>
            получение репозитория новостей
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Interfaces.IUnitOfWork.AuthorsRep">
            <summary>
            получение репозитория авторов
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.Interfaces.IUnitOfWork.Save">
            <summary>
            сохранение изменений
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.Models.Author">
            <summary>
            основные свойства авторов
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.Author.Id">
            <summary>
            id автора
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.Author.Name">
            <summary>
            Имя автора
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.Author.News">
            <summary>
            Список новостей данного автора
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.Models.News">
            <summary>
            Этот класс содержит основные свойства новостей
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.Id">
            <summary>
            идентификатор новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.Title">
            <summary>
            название статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.Description">
            <summary>
            краткое описание статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.NewsImage">
            <summary>
            изображение новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.MainText">
            <summary>
            основной текст новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.Relevancy">
            <summary>
            актуальность новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.CreationDateTime">
            <summary>
            дата создания статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.ChangingDateTime">
            <summary>
            дата изменения новости
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.Author">
            <summary>
            автор статьи
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Data_Access.Models.News.AuthorId">
            <summary>
            Идентификатор автора
            </summary>
        </member>
        <member name="T:NewsPortalWebApi.Data_Access.Models.SampleData">
            <summary>
            Заполнятор бд 
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Data_Access.Models.SampleData.Initialize(System.IServiceProvider)">
            <summary>
            Метод для запуска процедуры заполнения бд
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="T:NewsPortalWebApi.Extensions.HostExtensions">
            <summary>
            Методы расширения для IHost
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Extensions.HostExtensions.MigrateDatabase``1(Microsoft.Extensions.Hosting.IHost,System.Action{``0,System.IServiceProvider})">
            <summary>
            Миграция БД
            </summary>
            <typeparam name="TContext">Тип контекста БД</typeparam>
            <param name="host"><see cref="T:Microsoft.Extensions.Hosting.IHost"/></param>
            <param name="seed">Опция заполнения данных</param>
            <returns><see cref="T:Microsoft.Extensions.Hosting.IHost"/></returns>
        </member>
        <member name="T:NewsPortalWebApi.Migrations.OneMoreMigration">
            <inheritdoc />
        </member>
        <member name="T:NewsPortalWebApi.Presentation_Layer.Controllers.NewsController">
            <summary>
            Контроллер представления новостей
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Presentation_Layer.Controllers.NewsController.#ctor(NewsPortalWebApi.Business_Logic.Inerfaces.INewsService{NewsPortalWebApi.Business_Logic.DTO.NewsShortDto,NewsPortalWebApi.Business_Logic.DTO.NewsDetailDto,NewsPortalWebApi.Business_Logic.DTO.AuthorDTO})">
            <summary>
            Конструктор контроллера
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Presentation_Layer.Controllers.NewsController.GetAllNews">
            <summary>
            Метод представления всех новостей
            </summary>
            <returns></returns>
        </member>
        <member name="M:NewsPortalWebApi.Presentation_Layer.Controllers.NewsController.GetGroup(System.Int32)">
            <summary>
            Метод для предоставления групп новостей по 10 штук
            </summary>
            <param name="page"></param>
            <returns>Четыре новости</returns>
        </member>
        <member name="M:NewsPortalWebApi.Presentation_Layer.Controllers.NewsController.GetNews(System.Guid)">
            <summary>
            Метод представления новости по id
            </summary>
            <param name="id">
            Id новости
            </param>
            <returns>
            Возвращает новость по id
            </returns>
        </member>
        <member name="M:NewsPortalWebApi.Presentation_Layer.Controllers.NewsController.GetAuthorName(System.Guid)">
            <summary>
            представление имени автора по id
            </summary>
            <param name="id">
            id автора
            </param>
            <returns>
            Возвращает имя автора по id
            </returns>
        </member>
        <member name="T:NewsPortalWebApi.Program">
            <summary>
            Класс описывающий точку входа в приложение и запускающий последующие службы
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Program.Main(System.String[])">
            <summary>
            Инициализация хоста
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Program.CreateHostBuilder(System.String[])">
            <summary>
            Создание хоста
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:NewsPortalWebApi.Startup">
            <summary>
            Класс запуска для веб хоста
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Конструктор класса запуска
            </summary>
        </member>
        <member name="P:NewsPortalWebApi.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:NewsPortalWebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Этот метод вызывается во время выполнения. Используйте этот метод для добавления сервисов в контейнер.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:NewsPortalWebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Этот метод вызывается во время выполнения. Используйте этот метод для настройки конвейера HTTP-запроса.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
